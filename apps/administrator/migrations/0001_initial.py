# Generated by Django 2.0.7 on 2018-10-07 15:19

import datetime
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('teachers', '0001_initial'),
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Administrator',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.AutoField(db_column='管理员编号', primary_key=True, serialize=False, verbose_name='管理人员编号')),
                ('username', models.CharField(db_column='用户名', max_length=150, unique=True, verbose_name='用户名')),
                ('password', models.CharField(db_column='密码', max_length=128, verbose_name='密码')),
                ('email', models.EmailField(db_column='邮箱', help_text='该邮箱将用来验证登录', max_length=254, verbose_name='邮箱')),
                ('add_time', models.DateTimeField(db_column='添加时间', default=datetime.datetime.now, verbose_name='添加时间')),
                ('remark', models.TextField(db_column='备注', default='', error_messages={'max_length': '备注不超过一百个字'}, help_text='备注不超过一百个汉字', max_length=100, verbose_name='备注')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': '管理人员表',
                'verbose_name_plural': '管理人员',
                'verbose_name': '管理人员',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ClassInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_number', models.CharField(db_column='班级', default='1', max_length=5, verbose_name='班级')),
                ('remark', models.TextField(blank=True, db_column='备注', default='', error_messages={'max_length': '备注不超过一百个字'}, help_text='备注不超过一百个汉字', max_length=100, null=True, verbose_name='备注')),
                ('biology_teacher', models.ForeignKey(db_column='生物老师', limit_choices_to={'subject': '生物'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='biology_teacher_class', to='teachers.TeacherInfo', verbose_name='生物老师')),
                ('chemistry_teacher', models.ForeignKey(db_column='化学老师', limit_choices_to={'subject': '化学'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='chemistry_teacher_class', to='teachers.TeacherInfo', verbose_name='化学老师')),
                ('chinese_teacher', models.ForeignKey(db_column='语文老师', limit_choices_to={'subject': '语文'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='chinese_teacher_class', to='teachers.TeacherInfo', verbose_name='语文老师')),
                ('english_teacher', models.ForeignKey(db_column='英语老师', limit_choices_to={'subject': '英语'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='english_teacher_class', to='teachers.TeacherInfo', verbose_name='英语老师')),
                ('geography_teacher', models.ForeignKey(db_column='地理老师', limit_choices_to={'subject': '地理'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='geography_teacher_class', to='teachers.TeacherInfo', verbose_name='地理老师')),
            ],
            options={
                'db_table': '班级信息表',
                'ordering': ['grade', 'class_number'],
                'verbose_name_plural': '班级信息',
                'verbose_name': '班级信息',
            },
        ),
        migrations.CreateModel(
            name='DormitoryInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dormitory_number', models.CharField(db_column='寝室号', default='001', max_length=5, verbose_name='寝室号')),
                ('year', models.CharField(db_column='年份', default='2018', max_length=10, verbose_name='年份')),
                ('remark', models.TextField(blank=True, db_column='备注', error_messages={'max_length': '备注不超过一百个字'}, help_text='备注不超过一百个汉字', max_length=100, null=True, verbose_name='备注')),
                ('teacher', models.ForeignKey(db_column='老师档案号', null=True, on_delete=django.db.models.deletion.SET_NULL, to='teachers.TeacherInfo', verbose_name='老师档案号')),
            ],
            options={
                'db_table': '宿舍信息表',
                'ordering': ['year', 'dormitory_number'],
                'verbose_name_plural': '宿舍',
                'verbose_name': '宿舍',
            },
        ),
        migrations.CreateModel(
            name='EmailVerifyRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(db_column='验证码', max_length=50, verbose_name='验证码')),
                ('email', models.EmailField(db_column='邮箱', max_length=50, verbose_name='邮箱')),
                ('send_type', models.CharField(choices=[('register', '注册'), ('forget', '找回密码'), ('update_email', '修改邮箱')], db_column='验证码类型', max_length=20, verbose_name='发送类型')),
                ('send_time', models.DateTimeField(db_column='发送时间', default=datetime.datetime.now, verbose_name='发送时间')),
            ],
            options={
                'db_table': '验证码表',
                'verbose_name_plural': '邮箱验证码',
                'verbose_name': '邮箱验证码',
            },
        ),
        migrations.CreateModel(
            name='GradeInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade_number', models.CharField(db_column='年级', default='1', max_length=2, verbose_name='年级')),
                ('year', models.CharField(db_column='届', default='2018', help_text='学生入学年份', max_length=10, unique=True, verbose_name='届')),
                ('header', models.CharField(blank=True, db_column='年级主任', default='', max_length=10, null=True, verbose_name='年级主任')),
                ('remark', models.TextField(blank=True, db_column='备注', default='', error_messages={'max_length': '备注不超过一百个字'}, help_text='备注不超过一百个汉字', max_length=100, null=True, verbose_name='备注')),
            ],
            options={
                'db_table': '年级信息表',
                'verbose_name_plural': '年级信息',
                'ordering': ['-year', 'grade_number'],
                'verbose_name': '年级信息',
            },
        ),
        migrations.AddField(
            model_name='classinfo',
            name='grade',
            field=models.ForeignKey(db_column='年级', null=True, on_delete=django.db.models.deletion.SET_NULL, to='administrator.GradeInfo', verbose_name='年级'),
        ),
        migrations.AddField(
            model_name='classinfo',
            name='header',
            field=models.ForeignKey(db_column='班主任档案号', null=True, on_delete=django.db.models.deletion.SET_NULL, to='teachers.TeacherInfo', verbose_name='班主任档案号'),
        ),
        migrations.AddField(
            model_name='classinfo',
            name='history_teacher',
            field=models.ForeignKey(db_column='历史老师', limit_choices_to={'subject': '历史'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='history_teacher_class', to='teachers.TeacherInfo', verbose_name='历史老师'),
        ),
        migrations.AddField(
            model_name='classinfo',
            name='math_teacher',
            field=models.ForeignKey(db_column='数学老师', limit_choices_to={'subject': '数学'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='math_teacher_class', to='teachers.TeacherInfo', verbose_name='数学老师'),
        ),
        migrations.AddField(
            model_name='classinfo',
            name='music_teacher',
            field=models.ForeignKey(db_column='音乐老师', limit_choices_to={'subject': '音乐'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='music_teacher_class', to='teachers.TeacherInfo', verbose_name='音乐老师'),
        ),
        migrations.AddField(
            model_name='classinfo',
            name='physical_teacher',
            field=models.ForeignKey(db_column='物理老师', limit_choices_to={'subject': '物理'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='physical_teacher_class', to='teachers.TeacherInfo', verbose_name='物理老师'),
        ),
        migrations.AddField(
            model_name='classinfo',
            name='politics_teacher',
            field=models.ForeignKey(db_column='政治老师', limit_choices_to={'subject': '政治'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='politics_teacher_class', to='teachers.TeacherInfo', verbose_name='政治老师'),
        ),
        migrations.AddField(
            model_name='classinfo',
            name='sport_teacher',
            field=models.ForeignKey(db_column='体育老师', limit_choices_to={'subject': '体育'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sport_teacher_class', to='teachers.TeacherInfo', verbose_name='体育老师'),
        ),
        migrations.AlterUniqueTogether(
            name='dormitoryinfo',
            unique_together={('dormitory_number', 'year')},
        ),
        migrations.AlterUniqueTogether(
            name='classinfo',
            unique_together={('grade', 'class_number')},
        ),
    ]
